_文件名  :  对单个的操作,真正的util 
文件名util : 对上面的util进行适配.简化操作     也就是说可以多次调用..
每个包下面有doc.也就是对本包的说明


			


extend为的是解决每个问题...   具体问题的扩展  或者为了更好的用户操作体验-多次调用









1.1 创建型模式
AbstractFactory ( 抽象工厂 ) 
FactoryMethod ( 工厂方法 ) 
Singleton ( 单态模式 ) 
Builder ( 建造者模式 ) 
Protot*pe * 原型模式 ) 
1.2 结构型模式
Adapter * 适配器模式 * 
Bridge ( 桥接模* ) 
Composite ( 组合模式 ) 
Decorator ( 装*模式 ) 
Facade ( 外观模式 ) 
Flyweight ( 享元模式 ) 
Proxy ( 代理模式 ) 
1.3 行为型模式
Chain of Responsibility ( 责任链模式 ) 
Command ( 命令模式 ) 
Interpreter ( 解释器模式 ) 
Iterator ( 迭代器*式 ) 
Mediator ( 中介者模式 ) 
Memento ( 备忘录模式 ) 
Observer ( 观察者模式 ) 
State ( 状*模式 ) 
Strategy ( 策略模式 ) 
TemplateMethod ( 模板方法 ) 
Vis*tor ( 访问者模式 ) 
责任链:运行动态,灵活,复杂.	命令:编译确定,死板.	 --且都是一次请求处理所有			状*: 一次请求,处理一个.工作流.
